{
  "title": "Dev Skills",
  "list": [
    {
      "name": "JavaScript",
      "content": "<p>My primary programming language. I'm using JS from front-end to backend and love its multi-paradigm nature where I have the chance to learn different methods like OOP and functional programming.</p><p>When not limited to strict deadlines, I'm a modern vanilla JS dev who loves to harness the power of <a href=\"microjs.com/\" rel=\"external\">micro libraries</a>. But when needed I never hesitate to use powerful utilities (<a href=\"http://underscorejs.org/\" rel=\"external\">Underscore</a>, <a href=\"https://lodash.com/\" rel=\"external\">Lodash</a>) and feature-rich libraries (<a href=\"https://jquery.com/\" rel=\"external\">jQuery</a>, <a href=\"backbonejs.org\" rel=\"external\">Backbone</a>, <a href=\"https://reactjs.org\" rel=\"external\">React</a>).</p><p><strong>Cross-browser compatibility:</strong> I frequently use <a href=\"http://www.caniuse.com\" rel=\"external\">Can I Use</a> database to support my target browsers.</p><p><strong>APIs:</strong> When working on <a href=\"/projects/rola-music-project-rmp\">RMP</a>'s crawler I studied and worked on various social media APIs like Facebook, Twitter, Google, Spotify and Musicbrainz. Thus I have solid knowledge on these RESTful APIs. In <a href=\"/projects/rola-music-project-rmp\">RMP</a> project I also developed an API driven architecture where all of my business logic and data layer are separated from the clients using it. In this project, using <a href=\"http://graphql.org/\" rel=\"external\">GraphQL</a> on the API layer significantly reduced my workload, as it allowed me to manage all data requests from a single endpoint.</p><p><strong>Testing:</strong> <a href=\"/projects/rola-music-project-rmp\">RMP</a> project also helped me gain experience on test-driven development and browser automatiom with <a href=\"http://www.nightmarejs.org/\" rel=\"external\">Nightmare.js</a>, <a href=\"http://nightwatchjs.org/\" rel=\"external\">Nightwatch.js</a> and <a href=\"https://github.com/cheeriojs/cheerio\" rel=\"external\">cheerio</a>.</p><p><strong>Roadmap:</strong> I love to study <a href=\"https://addyosmani.com/resources/essentialjsdesignpatterns/book/\" rel=\"external\">JS Design Patterns</a>, <a href=\"https://opensource.com/article/17/6/functional-javascript\" rel=\"external\">new paradigms</a> and <a href=\"http://backbonejs.org/docs/backbone.html\" rel=\"external\">source codes</a>, learn next-generation features as the language evolves (with using compilers like <a href=\"https://babeljs.io/\" rel=\"external\">Babel</a>) and extend my knowledge of <a href=\"https://developer.mozilla.org/en-US/docs/Web/API\" rel=\"external\">Web APIs</a>.</p>"
    },
    {
      "name": "Style & Motion",
      "content": "<p><strong>Methodology:</strong> Having a good knowledge about the working mechanism of CSS, in my medium-sized projects I always tend to use the plain old CSS using <a href=\"stylus-lang.com\" rel=\"external\">Stylus</a> as a pre-processor and <a href=\"https://github.com/postcss/autoprefixer\" rel=\"external\">Autoprefixer</a> as post-processor. I have also used CSS in JS (using <a href=\"https://github.com/FormidableLabs/radium\" rel=\"external\">Radium</a>) and have working knowledge of OOCSS and BEM methodologies.</p><p><strong>Web animations:</strong> In a short period of time, after using <a href=\"https://greensock.com/gsap\" rel=\"external\">GSAP</a> it has become my standard tool for flawless, smooth and controllable web animations. If it's not included in the project I prefer to use CSS transforms and animations.</p><p><strong>SVG:</strong> Using and animating SVG is fun and almost essential for a colorful user experience. I create my files in Sketch or Illustrator, export them using <a href=\"https://github.com/svg/svgo\" rel=\"external\">SVGO</a> and use them in the project with vanilla js or <a href=\"http://svgjs.com/\" rel=\"external\">Svg.js</a></p>"
    },
    {
      "name": "HTML",
      "content": "<p>I'm writing semantic HTML5 and I built templates using <a href=\"https://github.com/janl/mustache.js/\" rel=\"external\">Mustache</a> and <a href=\"https://handlebarsjs.com/\" rel=\"external\">Handlebars</a>. I have experience with the fast and small <a href=\"http://olado.github.io/doT/\" rel=\"external\">doT.js</a> template engine. I love the idea behind the <a href=\"https://www.webcomponents.org/\" rel=\"external\">web components</a> and I'm looking forward to experiment with <a href=\"https://www.polymer-project.org/\" rel=\"external\">Polymer</a>.</p>"
    },
    {
      "name": "Server-side scripting",
      "content": "<p>In the early days of my programming career, I first learned Classic ASP and finished big projects using it (One of them is still alive at <a href=\"http://isimetiketleri.com/\" rel=\"external\">isimetiketleri.com</a>, an e-commerce website where people can customize and buy name labels.). Then Wordpress became my primary content management tool. To use and customize Wordpress properly I learned PHP and Wordpress API. I'm also working on my server-side JavaScript capabilities and Node.js. While working on my side project <a href=\"/projects/rola-music-project-rmp\">RMP</a> I used Node.js for the platform and <a href=\"https://expressjs.com/\" rel=\"external\">Express</a> for the web framework.</p>"
    },
    {
      "name": "Data",
      "content": "<p>I have professional experience in relational databases (Mssql and MySql) and SQL language. I've also used <a href=\"http://graphql.org/\" rel=\"external\">GraphQL</a> (which is a flexible query language for APIs) in my side projects with the help of <a href=\"https://www.apollographql.com/\" rel=\"external\">Apollo</a> and its server and client-side solutions. When working on Express I used <a href=\"http://knexjs.org/\" rel=\"external\">Knex</a> (SQL query builder in JavaScript) and <a href=\"http://bookshelfjs.org/\" rel=\"external\">Bookshelf</a> (An ORM for MySql built on Knex) to easily query and manipulate data. And lastly, <a href=\"https://www.sequelpro.com/\" rel=\"external\">Sequel Pro</a> is my choice of database management tool for the desktop.</p>"
    }
  ]
}
